$date
	Fri Apr 18 01:33:34 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module top_tb $end
$var wire 1 ! we_out $end
$var wire 32 " store_data_out [31:0] $end
$var wire 32 # pc [31:0] $end
$var wire 32 $ load_data_in [31:0] $end
$var wire 32 % inst_i [31:0] $end
$var wire 1 & ce $end
$var wire 32 ' addr_out [31:0] $end
$var reg 1 ( clk $end
$var reg 1 ) rst $end
$scope module u_RAM $end
$var wire 1 * clk $end
$var wire 1 ) rst $end
$var wire 32 + wr_data [31:0] $end
$var wire 1 ! w_r $end
$var wire 32 , addr [31:0] $end
$var reg 32 - rd_data [31:0] $end
$upscope $end
$scope module u_inst_rom $end
$var wire 1 & ce $end
$var wire 32 . addr [31:0] $end
$var reg 32 / inst [31:0] $end
$upscope $end
$scope module u_top $end
$var wire 1 ( clk $end
$var wire 32 0 inst_i [31:0] $end
$var wire 32 1 load_data_in [31:0] $end
$var wire 1 ) rst $end
$var wire 1 ! we_out $end
$var wire 5 2 wd_o [4:0] $end
$var wire 32 3 store_data_out [31:0] $end
$var wire 1 4 reg2_read_o $end
$var wire 32 5 reg2_o [31:0] $end
$var wire 5 6 reg2_addr_o [4:0] $end
$var wire 1 7 reg1_read_o $end
$var wire 32 8 reg1_o [31:0] $end
$var wire 5 9 reg1_addr_o [4:0] $end
$var wire 32 : rdata2 [31:0] $end
$var wire 32 ; rdata1 [31:0] $end
$var wire 32 < pc_plus_4 [31:0] $end
$var wire 32 = pc [31:0] $end
$var wire 32 > load_data_out [31:0] $end
$var wire 32 ? imm_o [31:0] $end
$var wire 1 @ imm_en $end
$var wire 1 & ce $end
$var wire 7 A alusel_o [6:0] $end
$var wire 3 B aluop_o [2:0] $end
$var wire 32 C alu_result [31:0] $end
$var wire 32 D addr_out [31:0] $end
$var wire 1 E WB_en $end
$var wire 32 F WB_Data [31:0] $end
$var wire 2 G WB_Ctrl [1:0] $end
$var wire 1 H PC_en $end
$var wire 1 I MEM_en $end
$var wire 1 J L_or_S $end
$var wire 1 K Jump_en $end
$var wire 1 L ID_en $end
$var wire 1 M EX_en $end
$var wire 1 N EXPC_en $end
$scope module u_Control_Uint $end
$var wire 1 ( clk $end
$var wire 1 ) rst $end
$var wire 7 O ALUSEL [6:0] $end
$var parameter 3 P EX $end
$var parameter 3 Q ID $end
$var parameter 3 R MEM $end
$var parameter 3 S PC $end
$var parameter 3 T WB $end
$var reg 1 N EXPC_en $end
$var reg 1 M EX_en $end
$var reg 1 L ID_en $end
$var reg 1 K Jump_en $end
$var reg 1 J L_or_S $end
$var reg 1 I MEM_en $end
$var reg 1 H PC_en $end
$var reg 2 U WB_Ctrl [1:0] $end
$var reg 1 E WB_en $end
$var reg 1 @ imm_en $end
$var reg 3 V st_cur [2:0] $end
$var reg 3 W st_next [2:0] $end
$upscope $end
$scope module u_WB $end
$var wire 2 X WB_Ctrl [1:0] $end
$var wire 32 Y WB_Data [31:0] $end
$var wire 32 Z RAM_Data [31:0] $end
$var wire 32 [ PC_Plus4 [31:0] $end
$var wire 32 \ EX_Data [31:0] $end
$upscope $end
$scope module u_ex $end
$var wire 1 M en $end
$var wire 1 @ imm_en $end
$var wire 1 N pc_en $end
$var wire 1 ) rst $end
$var wire 32 ] reg_2 [31:0] $end
$var wire 32 ^ reg_1 [31:0] $end
$var wire 32 _ pc [31:0] $end
$var wire 32 ` input_2 [31:0] $end
$var wire 32 a input_1 [31:0] $end
$var wire 32 b imm [31:0] $end
$var wire 3 c aluop [2:0] $end
$var reg 32 d alu_result [31:0] $end
$upscope $end
$scope module u_id $end
$var wire 1 L id_en $end
$var wire 32 e inst_i [31:0] $end
$var wire 1 ) rst $end
$var wire 32 f reg2_data_i [31:0] $end
$var wire 32 g reg1_data_i [31:0] $end
$var wire 7 h op3 [6:0] $end
$var wire 3 i op2 [2:0] $end
$var wire 7 j op1 [6:0] $end
$var reg 3 k aluop [2:0] $end
$var reg 3 l aluop_o [2:0] $end
$var reg 7 m alusel [6:0] $end
$var reg 7 n alusel_o [6:0] $end
$var reg 32 o imm [31:0] $end
$var reg 32 p imm_o [31:0] $end
$var reg 32 q reg1 [31:0] $end
$var reg 5 r reg1_addr_o [4:0] $end
$var reg 32 s reg1_o [31:0] $end
$var reg 1 7 reg1_read_o $end
$var reg 32 t reg2 [31:0] $end
$var reg 5 u reg2_addr_o [4:0] $end
$var reg 32 v reg2_o [31:0] $end
$var reg 1 4 reg2_read_o $end
$var reg 5 w wd [4:0] $end
$var reg 5 x wd_o [4:0] $end
$upscope $end
$scope module u_mem $end
$var wire 1 y clk $end
$var wire 1 J l_or_s $end
$var wire 32 z load_data_in [31:0] $end
$var wire 32 { mem_addr_i [31:0] $end
$var wire 1 I mem_en $end
$var wire 32 | reg2_i [31:0] $end
$var wire 1 ) rst $end
$var reg 32 } addr_out [31:0] $end
$var reg 32 ~ load_data_out [31:0] $end
$var reg 32 !" store_data_out [31:0] $end
$var reg 1 ! we_out $end
$upscope $end
$scope module u_pc $end
$var wire 32 "" branch [31:0] $end
$var wire 1 K branch_en $end
$var wire 1 & ce $end
$var wire 1 H pc_en $end
$var wire 1 ) rst $end
$var wire 32 #" pc_plus_4 [31:0] $end
$var reg 32 $" pc [31:0] $end
$upscope $end
$scope module u_regfile $end
$var wire 1 ( clk $end
$var wire 5 %" raddr1 [4:0] $end
$var wire 5 &" raddr2 [4:0] $end
$var wire 1 7 re1 $end
$var wire 1 4 re2 $end
$var wire 1 ) rst $end
$var wire 5 '" waddr [4:0] $end
$var wire 32 (" wdata [31:0] $end
$var wire 1 E we $end
$var reg 32 )" rdata1 [31:0] $end
$var reg 32 *" rdata2 [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b100 T
b0 S
b11 R
b1 Q
b10 P
$end
#0
$dumpvars
b0 *"
b0 )"
b0 ("
bx '"
b0 &"
b0 %"
b0 $"
b100 #"
b0 ""
b0 !"
b0 ~
b0 }
bx |
b0 {
b0 z
zy
bx x
b0 w
bx v
b0 u
b0 t
bx s
b0 r
b0 q
bx p
b0 o
bx n
b0 m
bx l
b0 k
b0 j
b0 i
b0 h
b0 g
b0 f
b0 e
b0 d
bx c
bx b
bx a
bx `
b0 _
bx ^
bx ]
b0 \
b100 [
b0 Z
b0 Y
b0 X
b1 W
b0 V
b0 U
bx O
xN
0M
0L
xK
0J
0I
1H
b0 G
b0 F
0E
b0 D
b0 C
bx B
bx A
0@
bx ?
b0 >
b0 =
b100 <
b0 ;
b0 :
b0 9
bx 8
07
b0 6
bx 5
04
b0 3
bx 2
b0 1
b0 0
b0 /
b0 .
b0 -
b0 ,
b0 +
z*
0)
0(
b0 '
0&
b0 %
b0 $
b0 #
b0 "
0!
$end
#1000
0K
0H
1(
#2000
b100000 `
b0 a
b100000 ?
b100000 b
b100000 p
b100000 5
b100000 ]
b100000 v
b100000 |
b0 8
b0 ^
b0 s
b11 2
b11 x
b11 '"
b100101 A
b100101 O
b100101 n
b11 B
b11 c
b11 l
b100000 t
b10 W
1L
b11 k
b11 w
b100000 o
17
b100101 m
b10000 6
b10000 u
b10000 &"
b10011 j
b1 h
b1 V
b10000000000000000110010011 %
b10000000000000000110010011 /
b10000000000000000110010011 0
b10000000000000000110010011 e
0(
1&
1)
#3000
b100000 C
b100000 \
b100000 d
b100000 {
b100000 ""
b100 W
1M
0L
0N
1@
b10 V
1(
#4000
0(
#5000
b100000 F
b100000 Y
b100000 ("
b0 W
1E
0M
b10 G
b10 U
b10 X
b100 V
1(
#6000
0(
#7000
b1000000 t
b1000000 o
b0 6
b0 u
b0 &"
17
b100 w
b100101 m
b11 k
b10 h
b100000000000000001000010011 %
b100000000000000001000010011 /
b100000000000000001000010011 0
b100000000000000001000010011 e
b1000 <
b1000 [
b1000 #"
b100 #
b100 .
b100 =
b100 _
b100 $"
b1 W
0E
1H
b0 V
1(
#8000
0(
#9000
b1000000 `
b1000000 ?
b1000000 b
b1000000 p
b1000000 5
b1000000 ]
b1000000 v
b1000000 |
b100 2
b100 x
b100 '"
b10 W
1L
0H
b1 V
1(
#10000
0(
#11000
b1000000 F
b1000000 Y
b1000000 ("
b1000000 C
b1000000 \
b1000000 d
b1000000 {
b1000000 ""
b100 W
1M
0L
b10 V
1(
#12000
0(
#13000
b0 W
1E
0M
b100 V
1(
#14000
0(
#15000
b100000 q
b100000 ;
b100000 g
b100000 )"
b100001 t
b100001 o
b10000 6
b10000 u
b10000 &"
b11 9
b11 r
b11 %"
17
b11 w
b100101 m
b11 k
b1 h
b10000100011000000110010011 %
b10000100011000000110010011 /
b10000100011000000110010011 0
b10000100011000000110010011 e
b1100 <
b1100 [
b1100 #"
b1000 #
b1000 .
b1000 =
b1000 _
b1000 $"
b1 W
0E
1H
b0 V
1(
#16000
0(
#17000
b100001 `
b100000 a
b100001 ?
b100001 b
b100001 p
b100001 5
b100001 ]
b100001 v
b100001 |
b100000 8
b100000 ^
b100000 s
b11 2
b11 x
b11 '"
b10 W
1L
0H
b1 V
1(
#18000
0(
#19000
b1000001 F
b1000001 Y
b1000001 ("
b1000001 C
b1000001 \
b1000001 d
b1000001 {
b1000001 ""
b100 W
1M
0L
b10 V
1(
#20000
0(
#21000
b100001 o
17
b11 w
b100101 m
b11 k
b1000001 q
b1000001 ;
b1000001 g
b1000001 )"
b0 W
1E
0M
b100 V
1(
#22000
0(
#23000
b1000000 t
b1000000 o
b0 6
b0 u
b0 &"
17
b100 w
b100101 m
b11 k
b10 h
b100000000011000001000010011 %
b100000000011000001000010011 /
b100000000011000001000010011 0
b100000000011000001000010011 e
b10000 <
b10000 [
b10000 #"
b1100 #
b1100 .
b1100 =
b1100 _
b1100 $"
b1 W
0E
1H
b0 V
1(
#24000
0(
#25000
b1000000 `
b1000001 a
b1000000 ?
b1000000 b
b1000000 p
b1000000 5
b1000000 ]
b1000000 v
b1000000 |
b1000001 8
b1000001 ^
b1000001 s
b100 2
b100 x
b100 '"
b10 W
1L
0H
b1 V
1(
#26000
0(
#27000
b10000001 F
b10000001 Y
b10000001 ("
b10000001 C
b10000001 \
b10000001 d
b10000001 {
b10000001 ""
b100 W
1M
0L
b10 V
1(
#28000
0(
#29000
b0 W
1E
0M
b100 V
1(
#30000
0(
#31000
b0 ;
b0 g
b0 )"
b0 t
b0 q
b0 o
bx 6
bx u
bx &"
bx 9
bx r
bx %"
07
b0 w
b0 m
b0 k
bx j
bx i
bx h
bx %
bx /
bx 0
bx e
b10100 <
b10100 [
b10100 #"
b10000 #
b10000 .
b10000 =
b10000 _
b10000 $"
b1 W
0E
1H
b0 V
1(
#32000
0(
#33000
b0 `
b0 a
b0 ?
b0 b
b0 p
b0 5
b0 ]
b0 v
b0 |
b0 8
b0 ^
b0 s
b0 2
b0 x
b0 '"
b0 A
b0 O
b0 n
b0 B
b0 c
b0 l
b10 W
1L
0H
b1 V
1(
#34000
0(
#35000
b0 F
b0 Y
b0 ("
b0 C
b0 \
b0 d
b0 {
b0 ""
b0 W
1M
0L
0@
b10 V
1(
#36000
0(
#37000
b11000 <
b11000 [
b11000 #"
b10100 #
b10100 .
b10100 =
b10100 _
b10100 $"
b1 W
0M
1H
b0 V
1(
#38000
0(
#39000
b10 W
1L
0H
b1 V
1(
#40000
0(
#41000
b0 W
1M
0L
b10 V
1(
#42000
0(
#43000
b11100 <
b11100 [
b11100 #"
b11000 #
b11000 .
b11000 =
b11000 _
b11000 $"
b1 W
0M
1H
b0 V
1(
#44000
0(
#45000
b10 W
1L
0H
b1 V
1(
#46000
0(
#47000
b0 W
1M
0L
b10 V
1(
#48000
0(
#49000
b100000 <
b100000 [
b100000 #"
b11100 #
b11100 .
b11100 =
b11100 _
b11100 $"
b1 W
0M
1H
b0 V
1(
#50000
0(
#51000
b10 W
1L
0H
b1 V
1(
#52000
0(
#53000
b0 W
1M
0L
b10 V
1(
#54000
0(
#55000
b100100 <
b100100 [
b100100 #"
b100000 #
b100000 .
b100000 =
b100000 _
b100000 $"
b1 W
0M
1H
b0 V
1(
#56000
0(
#57000
b10 W
1L
0H
b1 V
1(
#58000
0(
#59000
b0 W
1M
0L
b10 V
1(
#60000
0(
#61000
b101000 <
b101000 [
b101000 #"
b100100 #
b100100 .
b100100 =
b100100 _
b100100 $"
b1 W
0M
1H
b0 V
1(
#62000
0(
#63000
b10 W
1L
0H
b1 V
1(
#64000
0(
#65000
b0 W
1M
0L
b10 V
1(
#66000
0(
#67000
b101100 <
b101100 [
b101100 #"
b101000 #
b101000 .
b101000 =
b101000 _
b101000 $"
b1 W
0M
1H
b0 V
1(
#68000
0(
#69000
b10 W
1L
0H
b1 V
1(
#70000
0(
#71000
b0 W
1M
0L
b10 V
1(
#72000
0(
#73000
b110000 <
b110000 [
b110000 #"
b101100 #
b101100 .
b101100 =
b101100 _
b101100 $"
b1 W
0M
1H
b0 V
1(
#74000
0(
#75000
b10 W
1L
0H
b1 V
1(
#76000
0(
#77000
b0 W
1M
0L
b10 V
1(
#78000
0(
#79000
b110100 <
b110100 [
b110100 #"
b110000 #
b110000 .
b110000 =
b110000 _
b110000 $"
b1 W
0M
1H
b0 V
1(
#80000
0(
#81000
b10 W
1L
0H
b1 V
1(
#82000
0(
#83000
b0 W
1M
0L
b10 V
1(
#84000
0(
#85000
b111000 <
b111000 [
b111000 #"
b110100 #
b110100 .
b110100 =
b110100 _
b110100 $"
b1 W
0M
1H
b0 V
1(
#86000
0(
#87000
b10 W
1L
0H
b1 V
1(
#88000
0(
#89000
b0 W
1M
0L
b10 V
1(
#90000
0(
#91000
b111100 <
b111100 [
b111100 #"
b111000 #
b111000 .
b111000 =
b111000 _
b111000 $"
b1 W
0M
1H
b0 V
1(
#92000
0(
#93000
b10 W
1L
0H
b1 V
1(
#94000
0(
#95000
b0 W
1M
0L
b10 V
1(
#96000
0(
#97000
b1000000 <
b1000000 [
b1000000 #"
b111100 #
b111100 .
b111100 =
b111100 _
b111100 $"
b1 W
0M
1H
b0 V
1(
#98000
0(
#99000
b10 W
1L
0H
b1 V
1(
#100000
0(
#101000
b0 W
1M
0L
b10 V
1(
#102000
0(
